// ClickableMap.js
import React, { useState } from "react";

const ClickableMap = () => {
  // Mock data representing the map of Japan divided into 3 groups
  const mockData = [
    {
      id: 1,
      groupName: "1",
      color: "#c5a3ff",
      paths: [
        {
          id: "Aomori",
          d: "m 344.61993,125.64889 0.92,-0.83 0.58,-1.05 0.57,-1.85 0.23,-2.45 0.59,-1.14 -0.72,-2.06 -0.86,-1.04 -0.79,-0.08 -0.85,1.61 -1.13,0.81 -1.52,-0.42 -0.67,0.65 -1.81,0.34 -0.85,0.87 -0.93,-0.47 0.69,-4.59 0.42,-0.66 0.31,-1.84 1.43,-2.03 -0.22,-0.82 0.3,-0.55 1.72,1.57 1.32,0.11 0.89,0.5 1.57,1.97 1.46,0.85 0.89,0.11 1,-0.37 2.04,-1.67 -1.49,6.85 -0.1,5.09 0.55,5.55 1.37,4.86 1.18,1.09 0.67,-0.39 0.23,0.55 1.91,1.89 0,0 -0.47,0.54 -1.39,0.62 -0.11,0.83 -0.89,0.69 -1.24,-0.77 -0.68,0.09 -1.72,1.1 -0.68,-1.08 -1.96,1.49 -1.52,0.38 -0.74,0.5 -0.04,0.72 -0.46,0.02 -1,0.78 -0.94,-0.01 -0.46,-0.68 0,0 -0.14,-1.31 0.5,-1.22 0.41,-0.27 -0.28,-1.84 -2.13,0.23 0.16,-2.35 -1.23,0.49 -0.24,1.08 -0.71,-0.1 -0.72,0.62 -0.76,0.05 -0.79,0.63 -1.25,-0.84 -1,0.84 -1.15,-1.19 -0.8,0 -0.27,-0.84 -1.31,0.11 -0.5,1 -0.86,-0.18 -1.35,0.38 -0.81,-0.28 -1.48,0.13 -0.21,-0.49 -0.54,-0.32 -0.77,0.35 -0.26,0.87 -1.13,-0.35 -0.51,0.11 0,0 0.26,-1.78 -0.19,-1.44 -0.45,-0.86 -0.96,0.05 -0.15,-0.82 1.78,-1.42 1.02,-1.8 0.65,-0.44 0.61,-0.25 1.23,0.69 1.43,-1.07 0.81,-0.1 0.42,-0.61 1.02,-3.61 0.07,-3.8 -0.69,-0.75 -0.7,-0.08 0.17,-0.39 0.88,0.23 0.38,-0.43 0.4,-2.95 1.09,0.69 0.67,0.99 0.64,0.36 0.67,-0.19 1,-1.01 1.09,0.38 0.65,0.72 -0.11,2.27 0.39,2.52 0.73,3.28 0.93,1.19 1.33,-0.11 1.19,-1.28 0.22,-0.56 -0.22,-1.24 0.33,-1.45 1.49,0.54 0.68,0.96 -0.18,0.55 0.73,-0.01 0.92,0.45 0.53,0.88 0.77,0.21 z",
          stroke: "white",
          strokeWidth: 1,
        },
        {
          id: "Akita",
          d: "m 323.48993,155.40889 -0.69,-2.75 -1.39,-1.62 0.51,-0.81 0.74,0.23 0.6,0.89 0.19,-1.14 -0.26,-0.41 0.4,-0.61 0.19,-1.4 -0.34,-1.41 -1.07,-0.44 -0.45,0.43 -0.54,0.81 -0.61,2.06 0.54,0.42 -0.08,1.26 -0.75,-0.29 -0.89,0.15 -0.19,0.25 0.17,0.85 -2.1,-0.09 -0.96,-1.84 -0.22,-1.3 0.14,-0.73 1.93,1.32 0.67,-0.21 1.48,-1.46 0.87,-1.57 0.8,-2.39 0.6,-3 0.03,-1.67 -1.72,-1.81 0,0 0.51,-0.11 1.13,0.35 0.26,-0.87 0.77,-0.35 0.54,0.32 0.21,0.49 1.48,-0.13 0.81,0.28 1.35,-0.38 0.86,0.18 0.5,-1 1.31,-0.11 0.27,0.84 0.8,0 1.15,1.19 1,-0.84 1.25,0.84 0.79,-0.63 0.76,-0.05 0.72,-0.62 0.71,0.1 0.24,-1.08 1.23,-0.49 -0.16,2.35 2.13,-0.23 0.28,1.84 -0.41,0.27 -0.5,1.22 0.14,1.31 0,0 -0.4,0.57 -0.61,0.22 -0.81,1.11 0.4,0.49 -0.15,1.56 -0.52,0.46 -0.05,2.68 0.62,2.5 -0.56,0.18 -0.49,-0.48 -0.82,0.45 0.07,1.06 1.12,0.66 -0.82,1.47 -0.39,0.14 0.66,1.17 0.13,1.08 -0.51,1.19 -0.27,-0.03 -0.61,0.86 -0.42,0.11 0.21,0.72 -0.43,1.34 -0.78,0.85 0.05,0.81 -0.45,0.12 -0.05,0.65 0.39,0.09 0.6,1.25 -0.15,0.92 0.53,0.75 1.12,0.77 -0.33,1.06 0.85,0.44 -0.6,0.3 -0.47,0.83 0.27,0.22 -0.28,0.97 0.97,0.38 0.14,0.4 -0.79,1.37 0.08,1.15 0,0 -0.71,0.17 -1.64,1.57 -1.76,0.36 -0.27,-0.18 0,0 -0.24,-0.45 -1.52,-0.53 -0.58,-1.8 -1.06,-0.08 -0.35,-0.77 -1.08,0.27 -3.08,-0.94 -0.79,-0.7 -0.71,-0.18 -0.2,-1.17 -0.98,0.24 -0.37,0.46 -2.51,-0.41 0,0 0.68,-1.47 -0.23,-0.93 0.39,-0.78 -0.04,-0.53 0.39,-0.61 0.7,-0.11 0.94,-2.39 0.8,-4.19 0.04,-4.1 z",
          stroke: "white",
          strokeWidth: 1,
        },
      ],
    },
    {
      id: 2,
      groupName: "Honshu",
      color: "#85e3ff",
      paths: [
        {
          id: "Miyagi",
          d: "m 343.28993,189.88889 -0.41,0.71 0.32,0.25 0.34,-0.15 0.18,0.65 -1.26,0.75 -1.71,3.62 -0.4,3.7 0.32,1.95 0,0 -0.69,-0.18 -0.72,0.27 0.03,2.17 -0.13,0.22 -1.58,-0.06 0.47,0.39 -0.15,0.16 -1.21,-0.27 -0.63,-0.5 -0.28,-0.75 0.18,-1.14 -0.56,-0.46 -0.82,-0.28 -2.65,0.27 -0.37,-1.09 -1.14,-0.69 -1.13,0.57 -1.39,-0.66 0,0 -0.06,-1.98 1.72,-0.01 0.99,-0.55 0.19,-1.02 1.11,-1.58 -0.23,-1.23 0.16,-1.02 1.05,-1.32 -0.16,-0.6 1.09,-1.14 0.61,-1.6 -0.2,-0.7 -0.6,-0.39 -0.27,-0.91 0.38,-0.65 -0.03,-0.54 -0.61,-1.37 0.1,-0.23 0.66,0.35 0.4,-0.1 0.43,-1.15 -0.22,-0.97 0.68,-1.1 -0.83,-0.45 -0.19,-1.06 -1.06,-1.02 0.23,-0.35 0,0 0.27,0.18 1.76,-0.36 1.64,-1.57 0.71,-0.17 0,0 0.95,-0.14 1.22,0.91 1.44,0.48 0.55,0.81 2.21,-0.25 0.72,0.2 0.25,0.5 -0.59,0.55 0.47,1.09 1.77,1.01 0.52,-0.18 0.17,-0.7 0.9,-0.87 2.45,1 0.5,-1.94 -0.1,-0.51 0.68,-0.7 -0.11,-1.78 0.24,-0.52 1.44,0.13 1.17,0.49 0,0 0.85,2.85 -0.38,-0.12 -0.51,-0.82 -0.69,0.2 -0.09,1.67 -1.36,0.84 -0.15,0.56 1.02,0.68 -0.05,1.21 -0.71,-0.64 -1.01,0.94 -0.6,0.18 -0.03,0.72 1.72,0.21 -0.12,0.68 -0.72,0.64 -0.47,0.05 0.03,0.49 0.45,0.2 0.16,0.54 0.48,-0.17 0.61,0.36 -0.29,0.95 -0.47,-0.65 -0.36,0.11 0,1.65 -0.93,-0.02 0.36,0.32 0.12,0.94 1.33,-0.16 0.03,0.29 -0.66,0.12 0.69,1.8 -0.34,0.98 -1.46,-1.06 0.26,-0.52 -0.93,-0.27 0.26,-0.45 0.57,-0.22 -0.54,-0.64 -1.13,0.38 -0.17,-0.66 -0.27,-0.11 -0.97,-0.06 -1.56,0.45 -1.25,0.84 0.12,0.92 -0.54,0.17 -0.07,-1.38 -0.92,-0.12 -0.51,0.31 0.02,0.4 z",
          stroke: "white",
          strokeWidth: 1,
        },
        {
          id: "Yamagata",
          d: "m 327.89993,199.31889 -0.3,1.71 0.04,2.01 0.55,0.41 -1.33,1.61 -1.3,-0.26 -0.74,0.56 -1.47,-1.12 -1.23,0.46 -0.97,-1.68 -0.33,0.35 -0.63,0.07 -0.61,-0.39 -0.94,0.58 -0.63,-0.68 -0.79,0.18 0,0 -0.45,-0.77 -0.45,0.13 -0.66,-0.32 -0.66,-1.16 0.59,-3.17 0.69,-0.51 -0.35,-0.76 0.34,-0.82 -0.16,-1.31 0.52,-0.82 1.58,0.22 1.37,-0.86 0.79,-1.59 -1.15,-1.23 -1.84,-0.48 -0.8,-1.13 0.4,-1.99 -0.24,-0.29 -1.48,-0.32 -1.81,-0.96 0,0 1.17,-3.08 1.74,-1.51 1.14,-1.5 1.13,-4.08 0.61,-1.04 0.7,-2.64 -0.18,-0.58 0,0 2.51,0.41 0.37,-0.46 0.98,-0.24 0.2,1.17 0.71,0.18 0.79,0.7 3.08,0.94 1.08,-0.27 0.35,0.77 1.06,0.08 0.58,1.8 1.52,0.53 0.24,0.45 0,0 -0.23,0.35 1.06,1.02 0.19,1.06 0.83,0.45 -0.68,1.1 0.22,0.97 -0.43,1.15 -0.4,0.1 -0.66,-0.35 -0.1,0.23 0.61,1.37 0.03,0.54 -0.38,0.65 0.27,0.91 0.6,0.39 0.2,0.7 -0.61,1.6 -1.09,1.14 0.16,0.6 -1.05,1.32 -0.16,1.02 0.23,1.23 -1.11,1.58 -0.19,1.02 -0.99,0.55 -1.72,0.01 0.07,1.99 z",
          stroke: "white",
          strokeWidth: 1,
        },
      ],
    },
    {
      id: 3,
      groupName: "Shikoku and Kyushu",
      color: "#ffabab",
      paths: [
        {
          id: "Fukushima",
          d: "m 341.40993,223.74889 -0.62,0.81 -2.49,1.19 -0.39,0.66 0.04,0.48 0,0 -3.43,-1.04 -0.57,-1.03 -0.34,0.46 0.46,1.3 -1.12,0.49 -1.46,1.4 -0.43,-0.57 -1.14,-0.42 -0.33,-1.16 -0.82,-0.25 -0.76,-1.02 -0.55,-0.03 0,0 -0.33,-0.33 0.16,-1.86 -0.85,0.05 -0.23,-0.94 -1.02,-0.98 -2.39,-1 -2.41,-0.28 -1.36,0.59 -0.18,0.91 -2.79,0.87 -0.26,0.42 -0.79,0.19 -0.23,0.44 -0.63,0.09 -0.92,0.74 -1.36,0.24 -0.71,1.02 -0.94,0.43 0,0 -2.3,-0.72 -0.52,0.2 -0.01,-0.37 0,0 0.24,-0.42 -0.11,-1.34 0.22,-0.78 -0.42,-1.39 0.35,-1.28 -0.47,-0.93 -0.68,-0.16 -0.59,-0.8 0.97,-1.4 0.2,-1.16 0.14,-1.19 -0.67,-0.56 0.57,-0.92 2.15,-0.24 0.55,-0.29 0.68,0.24 0.32,-1.19 0.41,-0.16 0.47,-0.04 0.39,0.32 0.37,-0.24 1.26,0.22 0.48,-0.23 -0.38,-0.82 0.09,-0.81 -0.42,-1.03 0.03,-0.73 1.53,-1.04 -0.13,-0.24 0.71,-1.3 1.58,-1.71 0,0 0.79,-0.18 0.63,0.68 0.94,-0.58 0.61,0.39 0.63,-0.07 0.33,-0.35 0.97,1.68 1.23,-0.46 1.47,1.12 0.74,-0.56 1.3,0.26 1.33,-1.61 -0.55,-0.41 -0.04,-2.01 0.3,-1.71 0,0 1.39,0.66 1.13,-0.57 1.14,0.69 0.37,1.09 2.65,-0.27 0.82,0.28 0.56,0.46 -0.18,1.14 0.28,0.75 0.63,0.5 1.21,0.27 0.15,-0.16 -0.47,-0.39 1.58,0.06 0.13,-0.22 -0.03,-2.17 0.72,-0.27 0.69,0.18 0,0 0.38,1.28 0.71,0.43 0.05,1.28 0.44,0.75 0.55,6.03 0,3.31 -1.4,9.34 z m -3.43,3.16 0,0 0.03,0.01 -0.03,-0.01 z",
          stroke: "white",
          strokeWidth: 1,
        },
      ],
    },
  ];

  let [showgroupId, setShowGroupId] = useState("");

  const handleGroupClick = (groupId) => {
    // Handle group click here
    setShowGroupId(groupId);
    console.log("Group Number: ", groupId);
  };

  const handlePathClick = (pathId) => {
    // Handle path click here
    // console.log('Path clicked:', pathId);
  };

  const getRandomColor = () => {
    // Generate a random hex color
    // return #${Math.floor(Math.random() * 16777215).toString(16)};
  };

  return (
    <>
      <svg viewBox="0 0 3000 3000" width="3000" height="3000">
        {mockData.map((group, index) => {
          return (
            <g
              key={index}
              onClick={() => handleGroupClick(group.id)}
              transform="scale(3.0)"
              className="grp"
            >
              {group.paths.map((path, pathIndex) => (
                <path
                  key={pathIndex}
                  d={path.d}
                  fill={group.color} // Use a random color for each path
                  stroke={path.stroke}
                  strokeWidth={path.strokeWidth}
                  onClick={() => handlePathClick(path.id)}
                />
              ))}
            </g>
          );
        })}
      </svg>
    </>
  );
};

export default ClickableMap;
